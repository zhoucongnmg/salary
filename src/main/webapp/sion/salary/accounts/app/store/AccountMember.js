/*
 * File: app/store/AccountMember.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('sion.salary.accounts.store.AccountMember', {
    extend: 'Ext.data.Store',

    requires: [
        'sion.salary.accounts.model.AccountMember',
        'Ext.data.proxy.Ajax',
        'Ext.data.reader.Json'
    ],

    constructor: function(cfg) {
        var me = this;
        cfg = cfg || {};
        me.callParent([Ext.apply({
            model: 'sion.salary.accounts.model.AccountMember',
            storeId: 'AccountMember',
            data: [
                {
                    employeeCode: 'placeat',
                    employeeName: 'corporis',
                    roleStatus: 'consequatur',
                    type: 'ut',
                    config: 'dolorem'
                },
                {
                    employeeCode: 'aliquid',
                    employeeName: 'qui',
                    roleStatus: 'id',
                    type: 'aut',
                    config: 'exercitationem'
                },
                {
                    employeeCode: 'sed',
                    employeeName: 'quasi',
                    roleStatus: 'qui',
                    type: 'qui',
                    config: 'vitae'
                },
                {
                    employeeCode: 'et',
                    employeeName: 'doloremque',
                    roleStatus: 'atque',
                    type: 'aspernatur',
                    config: 'nisi'
                },
                {
                    employeeCode: 'provident',
                    employeeName: 'mollitia',
                    roleStatus: 'rerum',
                    type: 'magnam',
                    config: 'est'
                },
                {
                    employeeCode: 'aliquam',
                    employeeName: 'et',
                    roleStatus: 'autem',
                    type: 'laudantium',
                    config: 'suscipit'
                },
                {
                    employeeCode: 'repellendus',
                    employeeName: 'quae',
                    roleStatus: 'sequi',
                    type: 'distinctio',
                    config: 'minus'
                },
                {
                    employeeCode: 'aut',
                    employeeName: 'sit',
                    roleStatus: 'ut',
                    type: 'nam',
                    config: 'aut'
                },
                {
                    employeeCode: 'eum',
                    employeeName: 'maiores',
                    roleStatus: 'quo',
                    type: 'qui',
                    config: 'dolor'
                },
                {
                    employeeCode: 'quod',
                    employeeName: 'omnis',
                    roleStatus: 'voluptatem',
                    type: 'culpa',
                    config: 'est'
                },
                {
                    employeeCode: 'non',
                    employeeName: 'distinctio',
                    roleStatus: 'totam',
                    type: 'quo',
                    config: 'ullam'
                },
                {
                    employeeCode: 'tempore',
                    employeeName: 'soluta',
                    roleStatus: 'sit',
                    type: 'quia',
                    config: 'omnis'
                },
                {
                    employeeCode: 'velit',
                    employeeName: 'qui',
                    roleStatus: 'optio',
                    type: 'et',
                    config: 'est'
                },
                {
                    employeeCode: 'praesentium',
                    employeeName: 'ea',
                    roleStatus: 'aut',
                    type: 'reiciendis',
                    config: 'et'
                },
                {
                    employeeCode: 'vero',
                    employeeName: 'quod',
                    roleStatus: 'magni',
                    type: 'quasi',
                    config: 'quo'
                }
            ],
            proxy: {
                type: 'ajax',
                reader: {
                    type: 'json'
                }
            }
        }, cfg)]);
    }
});