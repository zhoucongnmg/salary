/*
 * File: app/store/SalaryItemStore.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('sion.salary.accounts.store.SalaryItemStore', {
    extend: 'Ext.data.Store',

    requires: [
        'sion.salary.accounts.model.SalaryItem',
        'Ext.data.proxy.Ajax',
        'Ext.data.reader.Json'
    ],

    constructor: function(cfg) {
        var me = this;
        cfg = cfg || {};
        me.callParent([Ext.apply({
            model: 'sion.salary.accounts.model.SalaryItem',
            storeId: 'SalaryItemStore',
            data: [
                {
                    name: 'ratione',
                    field: 'quis',
                    type: 'est',
                    desc: 'architecto',
                    system: 'autem'
                },
                {
                    name: 'dignissimos',
                    field: 'facere',
                    type: 'in',
                    desc: 'ipsum',
                    system: 'ut'
                },
                {
                    name: 'vitae',
                    field: 'magnam',
                    type: 'consequatur',
                    desc: 'repellat',
                    system: 'in'
                },
                {
                    name: 'velit',
                    field: 'earum',
                    type: 'est',
                    desc: 'ducimus',
                    system: 'laboriosam'
                },
                {
                    name: 'quia',
                    field: 'sed',
                    type: 'aut',
                    desc: 'quibusdam',
                    system: 'reprehenderit'
                },
                {
                    name: 'veritatis',
                    field: 'facere',
                    type: 'reprehenderit',
                    desc: 'quis',
                    system: 'sed'
                },
                {
                    name: 'amet',
                    field: 'itaque',
                    type: 'asperiores',
                    desc: 'ipsum',
                    system: 'autem'
                },
                {
                    name: 'non',
                    field: 'molestiae',
                    type: 'sint',
                    desc: 'dicta',
                    system: 'ut'
                },
                {
                    name: 'culpa',
                    field: 'alias',
                    type: 'sed',
                    desc: 'optio',
                    system: 'sed'
                },
                {
                    name: 'expedita',
                    field: 'placeat',
                    type: 'vel',
                    desc: 'et',
                    system: 'magni'
                },
                {
                    name: 'nulla',
                    field: 'quia',
                    type: 'molestias',
                    desc: 'sed',
                    system: 'hic'
                },
                {
                    name: 'voluptates',
                    field: 'dolores',
                    type: 'est',
                    desc: 'tenetur',
                    system: 'praesentium'
                },
                {
                    name: 'sit',
                    field: 'nisi',
                    type: 'eveniet',
                    desc: 'similique',
                    system: 'maiores'
                },
                {
                    name: 'deleniti',
                    field: 'eius',
                    type: 'voluptas',
                    desc: 'id',
                    system: 'et'
                },
                {
                    name: 'tempore',
                    field: 'dolore',
                    type: 'aut',
                    desc: 'odio',
                    system: 'eum'
                }
            ],
            proxy: {
                type: 'ajax',
                reader: {
                    type: 'json'
                }
            }
        }, cfg)]);
    }
});