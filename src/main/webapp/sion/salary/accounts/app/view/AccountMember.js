/*
 * File: app/view/AccountMember.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('sion.salary.accounts.view.AccountMember', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.grid.Panel',
        'Ext.grid.column.Action',
        'Ext.grid.View',
        'Ext.button.Button',
        'Ext.toolbar.Paging'
    ],

    height: 540,
    width: 760,
    layout: 'fit',
    title: '方案成员',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    header: false,
                    store: 'AccountMember',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'personCode',
                            text: '员工编号',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'name',
                            text: '员工姓名',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'duty',
                            text: '岗位状态',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'dept',
                            text: '员工类型',
                            flex: 1
                        },
                        {
                            xtype: 'actioncolumn',
                            hideable: false,
                            text: '薪资设定',
                            flex: 0.5,
                            items: [
                                {
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        var me = this.up('gridpanel').up(),
                                            account = me._account,
                                            namespace = me.getNamespace();

                                        var salaryPlan =  Ext.create(namespace + '.view.AccountMemberConfig',{
                                            _account : account,
                                            _member : record
                                        });
                                        salaryPlan.show();
                                    },
                                    iconCls: 's_icon_coins',
                                    tooltip: '薪资设定'
                                }
                            ]
                        }
                    ],
                    listeners: {
                        render: {
                            fn: me.onGridpanelRender,
                            scope: me
                        }
                    },
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'top',
                            items: [
                                {
                                    xtype: 'button',
                                    style: 'background:#3ca9fc;',
                                    width: 70,
                                    text: '<font color=\'#fff\'>新增</font>',
                                    listeners: {
                                        click: {
                                            fn: me.onButtonClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                }
            ],
            dockedItems: [
                {
                    xtype: 'pagingtoolbar',
                    dock: 'bottom',
                    width: 360,
                    displayInfo: true,
                    store: 'AccountMember'
                }
            ]
        });

        me.callParent(arguments);
    },

    onGridpanelRender: function(component, eOpts) {
        var me = this,
            account = me._account,
            store = component.getStore();

        store.clearFilter(true);
        Ext.apply(store.proxy.extraParams, {
            id : account.get('id')
        });
        store.load();
    },

    onButtonClick: function(button, e, eOpts) {

    }

});