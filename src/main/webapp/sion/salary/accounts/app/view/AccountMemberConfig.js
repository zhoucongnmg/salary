/*
 * File: app/view/AccountMemberConfig.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('sion.salary.accounts.view.AccountMemberConfig', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.form.Panel',
        'Ext.form.FieldSet',
        'Ext.grid.Panel',
        'Ext.grid.column.Number',
        'Ext.form.field.Number',
        'Ext.grid.View',
        'Ext.grid.plugin.RowEditing'
    ],

    width: 600,
    title: '员工薪资设置',

    layout: {
        type: 'vbox',
        align: 'stretch'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            width: 70,
                            iconCls: 's_icon_table_save',
                            text: '保存',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ],
            items: [
                {
                    xtype: 'form',
                    flex: 1,
                    bodyPadding: 10,
                    header: false,
                    layout: {
                        type: 'vbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'textfield',
                            itemId: 'accountName',
                            fieldLabel: '薪资方案',
                            name: 'accountName',
                            readOnly: true
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'userName',
                            fieldLabel: '姓名',
                            name: 'userName',
                            readOnly: true
                        },
                        {
                            xtype: 'fieldset',
                            flex: 1,
                            title: '薪资设置',
                            layout: {
                                type: 'vbox',
                                align: 'stretch'
                            },
                            items: [
                                {
                                    xtype: 'gridpanel',
                                    flex: 1,
                                    style: 'padding-bottom:30px;',
                                    store: 'PersonAccountItem',
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'accountItemName',
                                            text: '方案',
                                            flex: 1
                                        },
                                        {
                                            xtype: 'numbercolumn',
                                            dataIndex: 'value',
                                            text: '金额',
                                            flex: 1,
                                            editor: {
                                                xtype: 'numberfield',
                                                minValue: 0
                                            }
                                        }
                                    ],
                                    listeners: {
                                        beforerender: {
                                            fn: me.onGridpanelBeforeRender,
                                            scope: me
                                        }
                                    },
                                    plugins: [
                                        Ext.create('Ext.grid.plugin.RowEditing', {
                                            saveBtnText: '保存',
                                            cancelBtnText: '取消',
                                            clicksToMoveEditor: 1
                                        })
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            listeners: {
                beforerender: {
                    fn: me.onWindowBeforeRender,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onButtonClick: function(button, e, eOpts) {
        var me = this,
            store = Ext.getStore('PersonAccountItem'),
            items = [],
            member = me._member,
            account = me._account;

        store.each(function(record){
        //     record.set('accountItemId', account.get('id'));
        //     record.set('accountItemName', account.get('name'));
            items.push(record.data);
        });
        member.set('accountItems', items);
        me.close();
    },

    onGridpanelBeforeRender: function(component, eOpts) {
        // var me = this,
        //     store = component.getStore();

        // store.clearFilter(true);
        // Ext.apply(store.proxy.extraParams, {
        //     system : 'false'
        // });
        // store.load();
    },

    onWindowBeforeRender: function(component, eOpts) {
        var me = this,
            account = me._account,
            member = me._member;

        me.down('#userName').setValue(member.get('name'));
        me.down('#accountName').setValue(account.get('name'));
    }

});