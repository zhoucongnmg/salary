/*
 * File: app/view/SalaryPlan.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('sion.salary.accounts.view.SalaryPlan', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.form.Panel',
        'Ext.form.field.Checkbox',
        'Ext.form.field.TextArea',
        'Ext.grid.Panel',
        'Ext.grid.column.Number',
        'Ext.grid.column.Boolean',
        'Ext.grid.column.Action',
        'Ext.grid.View'
    ],

    height: 600,
    width: 800,
    title: '方案信息',

    layout: {
        type: 'vbox',
        align: 'stretch'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            width: 70,
                            text: '保存',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ],
            items: [
                {
                    xtype: 'form',
                    bodyPadding: 10,
                    header: false,
                    title: 'My Form',
                    items: [
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            itemId: 'name',
                            fieldLabel: '方案名称',
                            name: 'name'
                        },
                        {
                            xtype: 'checkboxfield',
                            anchor: '100%',
                            fieldLabel: '&nbsp;',
                            labelSeparator: ' ',
                            name: 'enableLevel',
                            boxLabel: '启用薪资体系'
                        },
                        {
                            xtype: 'textareafield',
                            anchor: '100%',
                            fieldLabel: '备注',
                            name: 'remark'
                        },
                        {
                            xtype: 'button',
                            width: 70,
                            text: '新增',
                            listeners: {
                                click: {
                                    fn: me.onAddSalaryItemClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                },
                {
                    xtype: 'gridpanel',
                    flex: 1,
                    height: 450,
                    itemId: 'itemGrid',
                    header: false,
                    title: '方案项目 ',
                    store: 'AccountItem',
                    columns: [
                        {
                            xtype: 'numbercolumn',
                            dataIndex: 'number',
                            text: '序号'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'name',
                            text: '项目名称'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'type',
                            text: '项目类型'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'fieldName',
                            text: '字段'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'value',
                            text: '公式'
                        },
                        {
                            xtype: 'booleancolumn',
                            dataIndex: 'show',
                            text: '是否显示'
                        },
                        {
                            xtype: 'actioncolumn',
                            dataIndex: 'date',
                            text: '操作',
                            items: [
                                {
                                    tooltip: '测试公式'
                                },
                                {

                                },
                                {

                                }
                            ]
                        }
                    ]
                }
            ],
            listeners: {
                render: {
                    fn: me.onWindowRender,
                    scope: me
                },
                beforerender: {
                    fn: me.onWindowBeforeRender,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onButtonClick: function(button, e, eOpts) {
        var me = this,
            namespace = me.getNamespace(),
            form = me.down("form"),
            store = Ext.getStore("Account"),
            itemGrid = me.down('#itemGrid'),
            itemList = [],
            itemStore = itemGrid.getStore();

        record = form.getRecord();
        form.updateRecord(record);
        if(!me.down('#name').isValid()){
            Ext.Msg.alert("提示", "信息不完整，请继续填写！");
            return false;
        }
        itemStore.each(function(item){
            itemList.push(item.data);
        });
        record.set('accountItems', itemList);
        record.set('persons', null);
        if(record.get('id') === ''){
            store.add(record);
        }
        alert('submit');
        console.log(record);
        console.log(store);
        store.sync({
            success: function(response, opts){
                Ext.Msg.alert("提示", "保存成功");
                store.load();
                me.close();
            },
            failure: function(){
                Ext.Msg.alert("提示", "保存失败");
                me.close();
            }
        });
    },

    onAddSalaryItemClick: function(button, e, eOpts) {
        var me =this,
            namespace=me.getNamespace();
        Ext.create(namespace+".view.AddSalaryItem").show();
    },

    onWindowRender: function(component, eOpts) {
        // var me = this,
        //     namespace = me.getNamespace(),
        //     itemStore = Ext.getStore('AccountItem'),
        //     form = me.down("form"),
        //     account = me._account;

        // itemStore.removeAll();
        // if(account){
        //     itemStore.add(account.get('accountItems'));
        //     form.loadRecord(account);
        // }else{
        //     form.loadRecord(Ext.create(namespace + '.model.Account', {
        //         id: '',
        //         name: ''
        //     }));
        // }
    },

    onWindowBeforeRender: function(component, eOpts) {
        var me = this,
            namespace = me.getNamespace(),
            itemStore = Ext.getStore('AccountItem'),
            form = me.down("form"),
            account = me._account;

        itemStore.removeAll();
        if(account){
            itemStore.add(account.get('accountItems'));
            form.loadRecord(account);
        }else{
            form.loadRecord(Ext.create(namespace + '.model.Account', {
                id: '',
                name: ''
            }));
        }
    }

});