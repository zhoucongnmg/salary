/*
 * File: app/view/SalaryPlanGrid.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('sion.salary.accounts.view.SalaryPlanGrid', {
    extend: 'Ext.panel.Panel',

    requires: [
        'Ext.grid.Panel',
        'Ext.button.Button',
        'Ext.grid.column.Action',
        'Ext.grid.View',
        'Ext.toolbar.Paging'
    ],

    layout: 'fit',
    title: '薪资方案',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    header: false,
                    title: 'salary accounts',
                    store: 'Account',
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'top',
                            items: [
                                {
                                    xtype: 'button',
                                    iconCls: 's_icon_action_add',
                                    text: '<span style="font-size:14px;color:#3892D3;font-weight:bold;">新建方案</span>',
                                    listeners: {
                                        click: {
                                            fn: me.onNewAccountClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'pagingtoolbar',
                            dock: 'bottom',
                            width: 360,
                            displayInfo: true,
                            store: 'Account'
                        }
                    ],
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'name',
                            text: '方案名称',
                            flex: 5
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'createUserName',
                            text: '创建人',
                            flex: 2
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'date',
                            text: '创建时间'
                        },
                        {
                            xtype: 'actioncolumn',
                            hideable: false,
                            text: '方案成员',
                            flex: 1,
                            items: [
                                {
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        // var me = this.up('gridpanel').up(),
                                        //     namespace = me.getNamespace();

                                        // var accountMember =  Ext.create(namespace + '.view.AccountMember',{
                                        //     _account : record
                                        // });
                                        // accountMember.show();



                                        var me = this.up('gridpanel').up(),
                                            store = Ext.getStore('PersonAccount'),
                                            selectRecords = [],
                                            personSelection = Ext.create("sion.salary.social.view.SearchPerson",
                                            {_scope : me, _callback : me.selectedCallback}),
                                            personGrid = personSelection.down('gridpanel'),
                                            personStore = personGrid.getStore();

                                        me._account = record;
                                        store.clearFilter(true);
                                        Ext.apply(store.proxy.extraParams, {
                                            id : record.get('id')
                                        });
                                        store.load({
                                            callback: function(records, operation, success) {
                                                personStore.getProxy().setExtraParam("insuredPersonExists", '');
                                                personStore.getProxy().setExtraParam("loadAll", 'true');
                                                personStore.load({
                                                    callback: function(records, operation, success) {
                                                        personSelection.show();
                                                        Ext.Array.each(store.data.items, function(item){
                                                            selectRecords.push(personStore.findRecord('id', item.data.id));
                                                        });
                                                        personSelection.down('gridpanel').getSelectionModel().select(selectRecords);
                                                    }
                                                });
                                            }
                                        });
                                    },
                                    iconCls: 's_icon_org_gear',
                                    tooltip: '方案成员'
                                }
                            ]
                        },
                        {
                            xtype: 'actioncolumn',
                            hideable: false,
                            text: '修改',
                            flex: 1,
                            items: [
                                {
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        this.up('gridpanel').up().detail(record);
                                    },
                                    iconCls: 's_icon_page_edit',
                                    tooltip: '修改'
                                }
                            ]
                        },
                        {
                            xtype: 'actioncolumn',
                            hideable: false,
                            text: '复制',
                            flex: 1,
                            items: [
                                {
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        var store = Ext.getStore("Account");

                                        Ext.Ajax.request({
                                            url :'salary/account/copy',//请求的服务器地址
                                            params : {
                                                id : record.get('id')
                                            },//发送json对象
                                            success:function(response,action){
                                                store.load();
                                                Ext.Msg.alert("提示", "复制成功");
                                            },failure: function(){
                                                store.load();
                                                Ext.Msg.alert("提示", "复制失败");
                                            }
                                        });
                                    },
                                    iconCls: 's_icon_action_copy',
                                    tooltip: '复制'
                                }
                            ]
                        },
                        {
                            xtype: 'actioncolumn',
                            hideable: false,
                            text: '删除',
                            flex: 1,
                            items: [
                                {
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        var store = Ext.getStore("Account");

                                        Ext.Msg.confirm('提示', '确定要删除吗？', function(text){
                                            if (text == 'yes'){
                                                Ext.Ajax.request({
                                                    url :'salary/account/remove',//请求的服务器地址
                                                    params : {
                                                        id : record.get('id')
                                                    },//发送json对象
                                                    success:function(response,action){
                                                        store.load();
                                                        Ext.Msg.alert("提示", "删除成功");
                                                    },failure: function(){
                                                        store.load();
                                                        Ext.Msg.alert("提示", "删除失败");
                                                    }
                                                });
                                            }
                                        });
                                    },
                                    iconCls: 's_icon_cross',
                                    tooltip: '删除'
                                }
                            ]
                        }
                    ],
                    listeners: {
                        itemdblclick: {
                            fn: me.onGridpanelItemDblClick,
                            scope: me
                        },
                        render: {
                            fn: me.onGridpanelRender,
                            scope: me
                        }
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    onNewAccountClick: function(button, e, eOpts) {
        var me = this,
            namespace = me.getNamespace();

        Ext.create(namespace+".view.SalaryPlan").show();
    },

    onGridpanelItemDblClick: function(dataview, record, item, index, e, eOpts) {
        this.detail(record);
    },

    onGridpanelRender: function(component, eOpts) {
        var store = component.getStore();

        store.clearFilter(true);
        store.load();
    },

    detail: function(record) {
        var me = this,
            namespace = me.getNamespace();

        var salaryPlan =  Ext.create(namespace + '.view.SalaryPlan',{
            _account : record
        });
        salaryPlan.show();
        // me.resetGridSelect(record);
    },

    selectedCallback: function(person, scope) {
        var me = scope,
            namespace = me.getNamespace(),
            account = me._account,
            store = Ext.getStore('PersonAccount');

        store.each(function(record){
            record.set('accountId', '');
            if(record.get('insuredPerson') === ''){
                record.set('insuredPerson', null);
            }
        });
        for(var i = 0; i < person.length; i++){
            var record = store.findRecord('id', person[i].data.id);
            if(store.find('id', person[i].data.id) === -1){
                var model = Ext.create(namespace + '.model.PersonAccount');
                model.data = person[i].data;
                model.set('accountId', account.get('id'));
                if(model.get('insuredPerson') === ''){
                    model.set('insuredPerson', null);
                }
                store.add(model);
            }else{
                record.set('accountId', account.get('id'));
            }
        }
        store.sync({
            success: function(response, opts){
                Ext.Msg.alert("提示", "保存成功");
            },
            failure: function(){
                Ext.Msg.alert("提示", "保存失败");
            }
        });
    }

});