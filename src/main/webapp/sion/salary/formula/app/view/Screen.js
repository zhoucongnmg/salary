/*
 * File: app/view/Screen.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('sion.salary.formula.view.Screen', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.mypanel110',

    requires: [
        'Ext.form.Panel',
        'Ext.form.field.Display'
    ],

    height: 100,
    itemId: 'Calc_Screen',
    padding: '10 10 10 10',
    shadow: 'frame',
    bodyCls: 'formula-screen',

    layout: {
        type: 'vbox',
        align: 'stretch',
        pack: 'end'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    flex: 1,
                    baseCls: 'formula-screenpanel',
                    itemId: 'outputPanel',
                    padding: '2 2 2 2',
                    layout: {
                        type: 'hbox',
                        align: 'stretch',
                        pack: 'end'
                    }
                },
                {
                    xtype: 'form',
                    _clear: true,
                    flex: 1,
                    baseCls: 'formula-screenpanel',
                    itemId: 'inputPanel',
                    padding: '2 2 2 2',
                    layout: {
                        type: 'hbox',
                        align: 'stretch',
                        pack: 'end'
                    },
                    items: [
                        {
                            xtype: 'displayfield',
                            _type: 'Numberic',
                            value: '0',
                            fieldStyle: 'font-family:consolas;font-size:50px;line-height:30px;margin-bottom:0px;background:none;color:#FFFFFF;text-shadow: rgb(0, 0, 0) 1px 1px 0px;'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});