/*
 * File: app/view/DynamicGrid.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('sion.salary.payroll.view.DynamicGrid', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.grid.Panel',
        'Ext.grid.column.Column',
        'Ext.grid.View',
        'Ext.grid.plugin.CellEditing',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button'
    ],

    height: 500,
    width: 800,
    layout: 'fit',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    emptyText: '无工资条数据',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'string'
                        }
                    ],
                    plugins: [
                        Ext.create('Ext.grid.plugin.CellEditing', {
                            listeners: {
                                validateedit: {
                                    fn: me.onCellEditingValidateedit,
                                    scope: me
                                }
                            }
                        })
                    ]
                }
            ],
            listeners: {
                beforerender: {
                    fn: me.onWindowBeforeRender,
                    scope: me
                }
            },
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            text: '保存',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onCellEditingValidateedit: function(editor, e, eOpts) {
        var me = this,
            field = e.field,
            record = e.record;
        me.calculate(field,record,function(values){
            for (var key in values) {
                record.set(key,values[key]);
            }
        });
    },

    onWindowBeforeRender: function(component, eOpts) {
        //     fields = [{'name': 'a', 'type': 'String'},{'name': 'b', 'type': 'String'},{'name': 'c', 'type': 'String'}],
        //     columns = [{'header': '编号a', 'dataIndex': 'a'}, {'header': '编号b', 'dataIndex': 'b'}, {'header': '编号c', 'dataIndex': 'c'}],
        //     data = [{'a':'张三', 'b':'1981年', 'c':'男'},{'a':'赵四', 'b':'1984年', 'c':'女'}],
        var me = this,
            id = me._id,
            ns = me.getNamespace(),
            grid = me.down('grid'),
            store = Ext.create(ns+'.store.PayrollItem');

        Ext.Ajax.request({
            url:'salary/payroll/findItemList',
            params : {
                id : id
            },
            success: function(response){
                store.removeAll();
                json = Ext.JSON.decode(response.responseText);
                store.model.setFields(json.data.fields);
                store.add(json.data.data);
                grid.reconfigure(store, json.data.columns);
                me._columns = json.data.columns;
            },failure: function(){
                Ext.Msg.alert("提示", "加载失败");
            }
        });
    },

    onButtonClick: function(button, e, eOpts) {
        var me = this,
            accountId = me._accountId,
            namespace = me.getNamespace(),
            mainModel = Ext.create(namespace + '.model.Main'),
            grid = me.down('grid'),
            store = grid.getStore(),
            data = [];

        store.sync({
            success: function(response, options){
                alert('sucess');
            },failure: function(response, options){
                Ext.Msg.alert("提示", "操作失败");
            }
        });

    },

    calculate: function(fieldId, record, cb) {
        var me = this,
            id = me._id,
            accountId = me._accountId;

        Ext.Ajax.request({
            url:'salary/payroll/calculate',
            async : false,
            jsonData : {
                accountId : accountId,
                fieldId : fieldId,
                record : record
            },
            success: function(response){
                var json = Ext.JSON.decode(response.responseText);
                Ext.callback(cb,me,[json.data]);
            },failure: function(){
                Ext.Msg.alert("提示", "加载失败");
            }
        });
    }

});