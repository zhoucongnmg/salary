/*
 * File: app/view/DynamicGrid.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('sion.salary.payroll.view.DynamicGrid', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.grid.Panel',
        'Ext.grid.column.Column',
        'Ext.grid.View',
        'Ext.grid.plugin.CellEditing',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button'
    ],

    height: 500,
    width: 800,
    layout: 'fit',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'string',
                            text: 'String'
                        }
                    ],
                    plugins: [
                        Ext.create('Ext.grid.plugin.CellEditing', {

                        })
                    ]
                }
            ],
            listeners: {
                beforerender: {
                    fn: me.onWindowBeforeRender,
                    scope: me
                }
            },
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            text: '保存',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onWindowBeforeRender: function(component, eOpts) {
        //     fields = [{'name': 'a', 'type': 'String'},{'name': 'b', 'type': 'String'},{'name': 'c', 'type': 'String'}],
        //     columns = [{'header': '编号a', 'dataIndex': 'a'}, {'header': '编号b', 'dataIndex': 'b'}, {'header': '编号c', 'dataIndex': 'c'}],
        //     data = [{'a':'张三', 'b':'1981年', 'c':'男'},{'a':'赵四', 'b':'1984年', 'c':'女'}],
        var me = this,
            accountId = me._accountId,
            grid = me.down('grid'),
            store = Ext.getStore('Dynamic');

        Ext.Ajax.request({
            url:'salary/payroll/memberList',
            params : {
                accountId : accountId
            },
            method:'post',
            async: true,
            success: function(response){
                store.removeAll();
                json = Ext.JSON.decode(response.responseText);
                store.model.setFields(json.data.fields, null, null);
                store.add(json.data.data);
                grid.reconfigure(store, json.data.columns);
                me._columns = json.data.columns;
            },failure: function(){
                Ext.Msg.alert("提示", "加载失败");
            }
        });
    },

    onButtonClick: function(button, e, eOpts) {
        var me = this,
            accountId = me._accountId,
            namespace = me.getNamespace(),
            mainModel = Ext.create(namespace + '.model.Main'),
            grid = me.down('grid'),
            store = grid.getStore(),
            data = [];

        // alert('aaa');
        // store.setProxy(new Ext.data.proxy.Proxy({
        //     type: 'ajax',
        //     api: {
        //         create: 'salary/payroll/addPayroll',
        // //         read: 'feeItem/list',
        //         update: 'salary/payroll/updatePayroll'
        // //         destroy: 'feeItem/delete'
        //     },
        //     reader: {
        //         type: 'json',
        //         rootProperty : 'data'
        //     },
        //     writer: {
        //         type: 'json',
        //         allowSingle: false,
        //     }
        // }));
        // console.log(store);
        // store.sync({
        //     success: function(response, options){
        //         alert('sucess');
        //     },failure: function(response, options){
        //         Ext.Msg.alert("提示", "操作失败");
        //     }
        // });

        Ext.Array.each(store.getModifiedRecords(), function(record){
            data.push(record.getData());
        });
        mainModel.set('roll', data);
        mainModel.set('accountId', accountId);

        // alert(data);
        // Ext.Ajax.request({
        //         url :'salary/payroll/addPayroll',
        //         params : {
        // //             accountId : 'abcde',
        //             pays : data
        // //             pays : data
        //         },
        //     success:function(response, action){
        //         Ext.Msg.alert("提示", "提交成功");
        //     },failure: function(){
        //         Ext.Msg.alert("提示", "提交失败");
        //     }
        // });

        mainModel.save({
            url: 'salary/payroll/addPayroll',
            success: function(e,operation){
                Ext.Msg.alert("提示", "保存成功");
                processStore.load();
                me.close();
            },
            failure: function(){
                Ext.Msg.alert("提示", "保存失败");
                processStore.load();
                me.close();
            }
        });
    }

});