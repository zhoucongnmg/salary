/*
 * File: app/view/PayrollSubForm.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('sion.salary.payroll.view.PayrollSubForm', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.form.Panel',
        'Ext.form.FieldSet',
        'Ext.form.field.Display',
        'Ext.toolbar.Spacer',
        'Ext.form.field.Date',
        'Ext.form.field.Hidden',
        'Ext.grid.Panel',
        'Ext.grid.column.Column',
        'Ext.grid.View',
        'Ext.selection.CheckboxModel',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button'
    ],

    height: 630,
    width: 642,
    title: '新增分次发放',
    modal: true,

    layout: {
        type: 'vbox',
        align: 'stretch'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    flex: 3.5,
                    layout: 'fit',
                    bodyPadding: 10,
                    items: [
                        {
                            xtype: 'fieldset',
                            margin: '',
                            layout: 'column',
                            title: '发放详情',
                            items: [
                                {
                                    xtype: 'displayfield',
                                    columnWidth: 0.35,
                                    fieldLabel: '薪资主题',
                                    labelWidth: 80,
                                    name: 'subject'
                                },
                                {
                                    xtype: 'tbspacer',
                                    columnWidth: 0.2,
                                    height: 20
                                },
                                {
                                    xtype: 'displayfield',
                                    columnWidth: 0.35,
                                    fieldLabel: '薪资月份',
                                    labelWidth: 80,
                                    name: 'month',
                                    listeners: {
                                        change: {
                                            fn: me.onDisplayfieldChange,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'tbspacer',
                                    columnWidth: 1,
                                    height: 20
                                },
                                {
                                    xtype: 'textfield',
                                    columnWidth: 0.9,
                                    fieldLabel: '薪资内容',
                                    labelWidth: 80,
                                    name: 'content',
                                    allowBlank: false
                                },
                                {
                                    xtype: 'tbspacer',
                                    columnWidth: 1,
                                    height: 20
                                },
                                {
                                    xtype: 'datefield',
                                    columnWidth: 0.35,
                                    fieldLabel: '发放日期',
                                    labelWidth: 80,
                                    name: 'date',
                                    allowBlank: false
                                },
                                {
                                    xtype: 'hiddenfield',
                                    fieldLabel: 'Label',
                                    name: 'items'
                                }
                            ]
                        }
                    ]
                },
                {
                    xtype: 'gridpanel',
                    flex: 6.5,
                    itemId: 'subGrid',
                    store: 'AccountItemStore',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'name',
                            text: '薪资项名称',
                            flex: 8
                        }
                    ],
                    selModel: Ext.create('Ext.selection.CheckboxModel', {

                    })
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    flex: 1,
                    dock: 'top',
                    ui: 'footer',
                    items: [
                        {
                            xtype: 'button',
                            width: 80,
                            text: '保存',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            width: 80,
                            text: '取消',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick1,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ],
            listeners: {
                afterrender: {
                    fn: me.onWindowAfterRender,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onDisplayfieldChange: function(field, newValue, oldValue, eOpts) {
        field.setValue(Ext.util.Format.date(newValue,'Y-m'));
        return false;
    },

    onButtonClick: function(button, e, eOpts) {
        var me = this,
            form = me.down('form'),
            payroll = me._payroll,
            payrollId = payroll.get('id'),
            grid = me.down('grid'),
            items = [],
            store = me._store,
            record = Ext.create(me.getNs() + '.model.PayrollSub',{
                payrollId : payrollId
            }),
            records = grid.getSelectionModel().getSelection();

        if(!form.isValid()){
            Ext.Msg.alert("提示", "信息不完整，请继续填写！");
            return false;
        }

        if(records.length==0)
        {
            Ext.Msg.alert('提示', '请选择薪资项！');
            return;
        }


        Ext.Array.each(records,function(record,index){
            items.push(record.get('id'));
        });
        form.updateRecord(record);
        record.set('items',items);
        record.save({
            success: function(response, opts){
                store.add(record);
                record.commit();
                me.close();
                Ext.Msg.alert("提示", "保存成功");
            },
            failure: function(){
                Ext.Msg.alert("提示", "保存失败");
            }
        });

    },

    onButtonClick1: function(button, e, eOpts) {
        var me = this;

        me.close();

    },

    onWindowAfterRender: function(component, eOpts) {
        var me = this,
            form = me.down('form'),
            grid = me.down('grid'),
            store = grid.getStore(),

            payroll = me._payroll;

        form.loadRecord(payroll);
        store.load({
            params : {
                id : payroll.get('accountId'),
                type: 'Input'
            }
        });
    },

    checkParent: function(node) {
        node = node.parentNode;
        if(!node) return;
        var checkP=false;
        node.cascadeBy(function (n)
                       {
                           if (n != node) {
                               if (n.get('checked') == true) {
                                   checkP = true;
                               }
                           }
                       });
        node.set('checked', checkP);
        this.checkParent(node);

    },

    removeTree: function(node) {
        if (!node) return;
        while (node.hasChildNodes()) {
            this.removeTree(node.firstChild);
            node.removeChild(node.firstChild);
        }
    },

    hasLeaf: function(rows) {
        var flag = false;
        Ext.each(rows, function (item) {
            if(item.isLeaf()){
                flag = true;
            }
        });
        return flag;
    }

});