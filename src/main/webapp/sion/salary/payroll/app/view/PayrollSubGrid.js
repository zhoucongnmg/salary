/*
 * File: app/view/PayrollSubGrid.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('sion.salary.payroll.view.PayrollSubGrid', {
    extend: 'Ext.grid.Panel',

    requires: [
        'Ext.grid.column.Column',
        'Ext.grid.View',
        'Ext.grid.plugin.RowEditing'
    ],

    itemId: 'mainGrid1',
    autoScroll: true,
    emptyText: '无工资条数据',
    store: 'PayrollItem',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            columns: [
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'string'
                }
            ],
            plugins: [
                Ext.create('Ext.grid.plugin.RowEditing', {
                    saveBtnText: '保存',
                    cancelBtnText: '取消',
                    listeners: {
                        edit: {
                            fn: me.onRowEditingEdit11,
                            scope: me
                        },
                        beforeedit: {
                            fn: me.onRowEditingBeforeEdit11,
                            scope: me
                        }
                    }
                })
            ]
        });

        me.callParent(arguments);
    },

    onRowEditingEdit11: function(editor, context, eOpts) {


        var me = this,
            mainGrid = me._mainGrid,
            store = mainGrid.getStore(),
            record = context.record,
            mainRecord = store.findRecord('personId',record.get('personId'));;


        me.calculate(record,function(values){
            for (var key in values) {
                mainRecord.set(key,values[key]);
            }
        });

    },

    onRowEditingBeforeEdit11: function(editor, context, eOpts) {
        var me = this;
        return me._canEdit;

    },

    calculate: function(record, cb) {
        var me = this,
            dynamicGrid = me._dynamicGrid,
            subRecords = [],
            subGrids = dynamicGrid.query('grid[_subGrid=true]')||[];

        Ext.Array.each(subGrids,function(subGrid,index){
            if (subGrid.itemId!=me.itemId) {
                var subRecord = subGrid.getStore().findRecord('personId',record.get('personId'));
                subRecords.push(subRecord.data);
            }
        });


        Ext.Ajax.request({
            url:'salary/payroll/calculateSub',
            jsonData : {
                record : record.data,
                subRecords : subRecords
            },
            success: function(response){
                var json = Ext.JSON.decode(response.responseText);
                Ext.callback(cb,me,[json.data]);
            },failure: function(){
                Ext.Msg.alert("提示", "加载失败");
            }
        });
    }

});