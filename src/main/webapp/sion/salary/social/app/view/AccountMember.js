/*
 * File: app/view/AccountMember.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('sion.salary.social.view.AccountMember', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.grid.Panel',
        'Ext.grid.column.Action',
        'Ext.grid.View',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button'
    ],

    height: 540,
    width: 760,
    layout: 'fit',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    header: false,
                    store: 'InsuredPersonAccount',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'personCode',
                            text: '员工编号',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'name',
                            text: '员工姓名',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'duty',
                            text: '职务',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'dept',
                            text: '部门',
                            flex: 1
                        },
                        {
                            xtype: 'actioncolumn',
                            hideable: false,
                            text: '删除',
                            flex: 0.5,
                            items: [
                                {
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        var store = Ext.getStore('InsuredPersonAccount');

                                        if(record.get('insuredPerson') === ''){
                                            record.set('insuredPerson', null);
                                        }else{
                                            record.get('insuredPerson').accountId = '';
                                        }
                                        store.remove(record);
                                    },
                                    iconCls: 's_icon_cross',
                                    tooltip: '删除'
                                }
                            ]
                        }
                    ],
                    listeners: {
                        render: {
                            fn: me.onGridpanelRender,
                            scope: me
                        }
                    },
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'top',
                            items: [
                                {
                                    xtype: 'button',
                                    width: 70,
                                    iconCls: 's_icon_action_add',
                                    text: '新增',
                                    listeners: {
                                        click: {
                                            fn: me.onButtonClick,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    width: 70,
                                    iconCls: 's_icon_table_save',
                                    text: '保存',
                                    listeners: {
                                        click: {
                                            fn: me.onButtonClick1,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onGridpanelRender: function(component, eOpts) {
        var me = this,
            account = me._account,
            store = component.getStore();

        store.clearFilter(true);
        Ext.apply(store.proxy.extraParams, {
            id : account.get('id')
        });
        store.load();
    },

    onButtonClick: function(button, e, eOpts) {

        var me = this,
            grid = me.down('gridpanel'),
            store = grid.getStore(),
            selectRecords = [],
            personSelection = Ext.create("sion.salary.social.view.SearchPerson",
                                         {_scope : me, _callback : me.selectedCallback}),
            personGrid = personSelection.down('gridpanel'),
            personStore = personGrid.getStore();

        personStore.load({
            callback: function(records, operation, success) {
                personSelection.show();
                Ext.Array.each(store.data.items, function(item){
                    selectRecords.push(personStore.findRecord('id', item.data.id));
                });
                personSelection.down('gridpanel').getSelectionModel().select(selectRecords);
            }
        });
    },

    onButtonClick1: function(button, e, eOpts) {
        var me = this,
            memberStore = Ext.getStore('InsuredPersonAccount'),
            account = me._account;

        memberStore.clearFilter();
        memberStore.sync({
            success: function(response, opts){
                Ext.Msg.alert("提示", "保存成功");
                me.close();
            },
            failure: function(){
                Ext.Msg.alert("提示", "保存失败");
                me.close();
            }
        });

    },

    selectedCallback: function(person, scope) {
        var me = scope,
            namespace = me.getNamespace(),
            account = me._account,
            store = Ext.getStore('InsuredPersonAccount');

        for(var i = 0; i < person.length; i++){
            if(store.find('id', person[i].data.id) === -1){
                var model = Ext.create(namespace + '.model.InsuredPersonAccount');
                model.data = person[i].data;
                if(model.get('insuredPerson') === ''){
                    model.set('insuredPerson', null);
                }else{
                    model.get('insuredPerson').accountId = account.get('id');
                }
                store.add(model);
            }
        }
    }

});